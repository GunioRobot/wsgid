wsgid
March 2011
Dalton Barreto


%txt2tags source for generating wsgid man page
%!postproc(man): "^(\.TH.*) 1 "  "\1 8 "


= NAME =
wsgid - A WGSI gateway for mongrel2

= SYNOPIS =
wsgid [OPTIONS]

= DESCRIPTION =
wsgid is a mongrel2 WSGI gateway. With wsgid you will be able to run your WSGI apps as unix daemons. You can have more than one instance of wsgid running the same application, and the requests will be distributed among all wsgid processes in a round-robin policy.

= OPTIONS =
: **--version**
show program's version number and exit 
: **-h**, **--help**
show this help message and exit
: **--app-path**
Path to the WSGI application. This should be the path where the code of your application is located. If the app is installed system wide, you don't need this.

This path will be added to sys.path so any module below this hierarchy can be imported with a simple //import <modulename>//

The directory that contains your application must obey some rules, please see APP Format section of this manual.

**Note**: If this option is not passed, wsgid will generate logs inside /tmp/logs, so be sure that this path exists before running wsgid in daemon mode.
: **--wsgi-app**
Full qualified name for the WSGI application object. This option is used when wsgid cannot load your app automatically by looking at **--app-path**, and when your app is installed system wide. Suppose you have inside your app a package named //web//, and in this package you have a module named //frontends//. Suppose frontends/wsgi.py is the module that defines the WSGI application object, as specified by PEP-333.
```
myapp/
  __init__.py
  module1.py
  module2.py
  web/
    __init__.py
    frontends/
      __init__.py
      wsgi.py
```
In this example, you would call wsgid with **--wsgi-app=myapp.web.frontends.wsgi.application**

The WSGI application object does not necessarily have to be named //application//. So if your app defines an object named //wsgi_entry_point//, just pass that to wsgid: **--wsgi-app=myapp.web.frontends.wsgi.wsgi_entry_point**
: **--loader-dir=LOADER_DIR**
If wsgid can not auto-load your app, you can write your own loader and point it to wsgid with this option. This path is just a folder with some .py files. wsgid will try to load all .py files searching for custom application loaders. The first loader that reports the ability to load the given application will be used

When this option is used at the same time that the --chroot option, the value passed will be realtive to the --app-path folder.
: **--chroot**
When this options is used, wsgid does a chroot to the --app-path folder. Remember that you have to run wsgid as root so this options takes effect. As running a daemon as root is not a good idea, wsgid will drop privileges to the user/group that owns the --app-path folder
: **--uuid=UUID**

: **--recv=RECV**
TCP socket used to receive data from mongrel2. This is the same value that is in the //send_spec// of //handler// table of mongrel2 config database. By passing this option to wsgid your application will respond to requests for mongrel2's routes associated with this socket.

The format of //RECV// can be any format accepted by zeromq
: **--send=SEND**
TCP socket used to return data to mongrel2. This is the same value that is in the //recv_spec// of //handler// table of mongrel2 config database. This value must belong to the same registry from where you got your **--recv** socket.

The format of //SEND// can be any format accepted by zeromq
: **--no-daemon**
Used mainly for debugging purposes. When this option is passed wsgid will not fork to background and will write all logs to stderr.
: **--workers**
Set the number of wsgid workers processes. Each process has its own PID and is responsible for handling one request at a time.
: **--keep-alive**
This option will make wsgid watch for its child processes. If any child process dies a new process is created immediately.
: **--debug**
Runs in debug mode. The logs will be more verbose with this option turned on.


= APPLICATION CONFIGURATION =

wsgid is able to load config options from a config file. This file must be at the root of your app-path. The file name is //wsgid.json//. The internal format is just plain JSON. The only option that you can't use in the JSON config file is //--app-path//. All other options are the same, just remember to remove the //--// part and replace the **-** with **_**. So **--wsgi-app** becomes **wsgi_app**. An example of a //wsgid.json// follows:
```
{
  "recv": "tcp://127.0.0.1:5000",
  "send": "tcp://127.0.0.1:5001",
  "debug": "true",
  "workers": "1",
  "keep_alive": "true"
}
```

= AUTHORS =
wsgid was written by Dalton Barreto <daltonmatos@gmail.com>

= SEE ALSO =
: **wsgid website**
http://wsgid.com
: **PEP-333 - Python Web Server Gateway Interface v1.0**
http://www.python.org/dev/peps/pep-0333
: **zeromq**
http://zeromq.org

